scchart pacemaker {
  input bool as, vs;
  output bool ap, vp;
  
  int to_lri = 21, to_uri = 18, to_avi = 6, to_pvarp = 9, to_vrp = 6, to_aei = 12;
  
  output bool LRI, URI, AVI, PVARP, VRP, AEI;
  bool LRI_p, URI_p, AVI_p, AEI_p;
  
  output bool as_accept, vs_accept;
  
  int t_lri, t_uri, t_avi, t_pvarp, t_vrp, t_aei;


  region pulse_a:

  initial state off {
    entry / ap = false;
    entry / as_accept = false;
  }
  --> on_sense with (t_pvarp == 0 & t_avi == 0) & as
  --> on_pulse with AEI_p;

  state on_sense {
    entry / as_accept = true
  }
  --> off with true;
  
  state on_pulse {
    entry / ap = true
  }
  --> off with true;

//Ventricle Pulse (VS)
  region pulse_v:

  initial state off {
    entry / vp = false;
    entry / vs_accept = false;
  }
  --> on_sense with t_vrp == 0 & vs & t_uri == 0
  --> on_pulse with AVI_p;

  state on_sense {
    entry / vs_accept = true
  }
  --> off with true;
  
  state on_pulse {
    entry / vp = true
  }
  --> off with true;


//AVI Timer
  region avi:

  initial state off {
    entry / AVI = false;
    entry / AVI_p = false;
    entry / t_avi = 0
  }
  --> on with ap | as_accept;

  state on {
    entry / AVI = true
  }
  --> off with vs_accept
  --> on with t_avi < to_avi | t_uri > 0 / t_avi ++
  --> p_off with t_avi >= to_avi & t_uri == 0;

  state p_off {
    entry / AVI = false;
    entry / AVI_p = true
  }
  --> off with true;

//PVARP Timer
  region pvarp:

  initial state off {
    entry / PVARP = false;
    entry / t_pvarp = 0
  }
  --> on with vp | vs_accept;

  state on {
    entry / PVARP = true
  }
  --> on with t_pvarp < to_pvarp / t_pvarp ++
  --> off with t_pvarp >= to_pvarp;


//VRP Timer
  region vrp:

  initial state off {
    entry / VRP = false;
    entry / t_vrp = 0
  }
  --> on with vp | vs_accept;

  state on {
    entry / VRP = true
  }
  --> on with t_vrp < to_vrp / t_vrp ++
  --> off with t_vrp >= to_vrp;


//AEI Timer
  region aei:

  initial state off {
    entry / AEI = false;
    entry / AEI_p = false;
    entry / t_aei = 0;
  }
  --> on with vp | vs_accept;

  state on {
    entry / AEI = true
  }
  --> off with as_accept
  --> on with t_aei < to_aei / t_aei ++
  --> p_off with t_aei >= to_aei;

  state p_off {
    entry / AEI = false;
    entry / AEI_p = true;
  }
  --> off with true;


  region lri:

  initial state off {
    entry / LRI = false;
    entry / LRI_p = false;
    entry / t_lri = 0;
  }
  --> on with vp | vs_accept;

  state on {
    entry / LRI_p = false;
    entry / LRI = true;
  }
  --> on with vp | vs_accept / t_lri = 0
  --> on with t_lri < to_lri / t_lri ++
  --> off with t_lri >= to_lri;

/* 
  state p_off {
    entry / LRI = false;
    entry / LRI_p = true;
    entry / t_lri = 0;
  }
  --> on with true;
*/

  region uri:

  initial state off {
    entry / URI = false;
    entry / URI_p = false;
    entry / t_uri = 0;
  }
  --> on with vp | vs_accept;

  state on {
    entry / URI = true
    entry / URI_p = false;
  }
  --> on with t_uri < to_uri / t_uri ++
  --> p_off with t_uri >= to_uri - 1;

  state p_off {
    entry / URI = false;
    entry / URI_p = true;
    entry / t_uri = to_uri;
  }
  --> on with true;
  
}